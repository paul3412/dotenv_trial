files:
  "/etc/environment":
    mode: "000775"
    owner: root
    group: users
    content: |
      LC_ALL=en_US.UTF-8
      LANG=en_US.UTF-8
      LC_CTYPE=en_US.UTF-8

  "/opt/elasticbeanstalk/env.vars":
    mode: "000775"
    owner: root
    group: users
    content: |
      # Defines variables for use by the other scripts below.

      EB_NODE_VERSION=$(/opt/elasticbeanstalk/bin/get-config optionsettings -n aws:elasticbeanstalk:container:nodejs -o NodeVersion)

      # Exported to make sure Node binaries can be found by npm when we run it.
      # And this lets us invoke npm more simply too.
      export PATH=/opt/elasticbeanstalk/node-install/node-v$EB_NODE_VERSION-linux-x64/bin:$PATH

      # For parity with EB https://gist.github.com/wearhere/de51bb799f5099cec0ed28b9d0eb3663#file-ebnode-py-L147
      # and because some npm packages require HOME. This will also get npm to
      # read its configuration from the proper directory.
      export HOME=$(/opt/elasticbeanstalk/bin/get-config container -k app_user_home)

      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)
      EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)

      # Export the user's environment variables for use with npm, both because
      # EB does it https://gist.github.com/wearhere/de51bb799f5099cec0ed28b9d0eb3663#file-ebnode-py-L150
      # as well as because we might need NPM_TOKEN.
      #
      # I wish this was a heredoc but I can't get the syntax right in YAML,
      # EB gives an error "warning: here-document delimited by end-of-file (wanted `EOS`)"
      eval $(node -e "var vars = JSON.parse('$(/opt/elasticbeanstalk/bin/get-config environment)'); console.log(Object.keys(vars).map((key) => \`export \${key}=\"\${vars[key]}\"\`).join('\n'));")

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/45npm_downgrade.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash
      #
      # Make sure that we're using npm 2 because npm 3 is too slow to install for EB.

      . /opt/elasticbeanstalk/env.vars

      if [ $(npm -v) != "3.10.3" ]; then
        echo "Downgrading npm to 3.10.3..."
        npm install npm@3.10.3 -g
      else
        echo "npm already at 3.10.3"
      fi

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/50npm.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash
      #
      # Only install modules, don't rebuild like Elastic Beanstalk does by default:
      # https://gist.github.com/wearhere/de51bb799f5099cec0ed28b9d0eb3663.
      # New modules will be built when they are installed, and cached modules don't
      # need to be rebuilt. When the Node version changes, the configdeploy script
      # will rebuild.
      #
      # Note that this *overwrites* Elastic Beanstalk's default 50npm.sh script.

      . /opt/elasticbeanstalk/env.vars

      cd $EB_APP_STAGING_DIR && npm install --production

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/55npm_cleanup.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash
      #
      # Remove all npm tmp files leftover by npm shrinkwrap flow.
      # https://github.com/npm/npm/issues/6855

      rm -rf /tmp/npm-*

  "/home/ec2-user/add_swap.sh":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/bash
      SWAPFILE=/var/swap.1
      SWAP_MEGABYTES=1024

      if [ -f $SWAPFILE ]; then
        echo "Swapfile $SWAPFILE found, assuming already setup"
        exit;
      fi

      /bin/dd if=/dev/zero of=$SWAPFILE bs=1M count=$SWAP_MEGABYTES
      /bin/chmod 600 $SWAPFILE
      /sbin/mkswap $SWAPFILE
      /sbin/swapon $SWAPFILE
      echo '/var/swap.1 swap swap defaults 0 0' >> /etc/fstab

  "/home/ec2-user/change_swappiness.sh":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/bash
      NEW_SWAPPINESS=1
      sysctl vm.swappiness=$NEW_SWAPPINESS
      sysctl -p

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/56npm_socket_fix.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #attempt to modify the node_module for socket io as needed

      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)

      LOC1=$EB_APP_STAGING_DIR/node_modules/sails/node_modules/sails-hook-sockets/lib/parse-sdk-metadata.js
      LOC2=$EB_APP_STAGING_DIR/node_modules/sails-hook-sockets/lib/parse-sdk-metadata.js

      if [ -e "$LOC1" ]; then
        echo "File found in ${LOC1}"
        sudo sed -i 's/9/11/g' $LOC1
        echo "Changed file is now =>"
        cat $LOC1
      fi

      if [ -e "$LOC2" ]; then
        echo "File found in ${LOC2}"
        sudo sed -i 's/9/11/g' $LOC2
        echo "Changed file is now =>"
        cat $LOC2
      fi

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/57npm_socket_log_fix.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #attempt to comment out the socket disconnect log

      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)

      LOC1=$EB_APP_STAGING_DIR/node_modules/sails/node_modules/sails-hook-sockets/lib/on-connect.js
      LOC2=$EB_APP_STAGING_DIR/node_modules/sails-hook-sockets/lib/on-connect.js

      if [ -e "$LOC1" ]; then
        echo "File found in ${LOC1}"
        sudo sed -i "s/\(app.log.warn('Socket disconnected\)/\/\/\1/g" $LOC1
      fi

      if [ -e "$LOC2" ]; then
        echo "File found in ${LOC2}"
        sudo sed -i "s/\(app.log.warn('Socket disconnected\)/\/\/\1/g" $LOC2
      fi

  "/opt/elasticbeanstalk/hooks/appdeploy/post/99remove_env_file.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash====
      cd /var/app/current/
      echo 'printing directory'
      ls
      rm .env

